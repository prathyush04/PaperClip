A 3D Convolutional Neural Network Approach for
Sustainable Architectural Design through
Computational Fluid Dynamics Simulation and
Reverse Design Workflow
Abstract
This paper introduces a versatile and flexible approximation model. This model
is designed for the near real-time prediction of steady turbulent flow within a 3D
environment. The model uses residual Convolutional Neural Networks (CNNs).
This methodology provides immediate feedback, enabling real-time iterations
during the initial stages of architectural design. Furthermore, this workflow is
inverted, offering designers a tool that produces building volumes based on desired
wind flow patterns.
1 Introduction
Architectural design is inherently influenced by environmental constraints from its early conceptual
stages. During this period, when the forms of buildings and cities are established, informed decisions
regarding sustainable development are critically important. However, design proposals can evolve
rapidly, making it difficult to provide relevant simulations at a comparable pace. In particular,
Computational Fluid Dynamics (CFD) requires intricate geometry preparation and computationally
demanding solutions. This process is not only time-consuming but also conflicts with the speed of
design iterations. To improve the integration of CFD in design processes, this work concentrates
on employing data-driven flow field predictions. It also leverages approximation using CNNs. This
approach aims to overcome the challenges associated with traditional CFD simulations and make
them more accessible for iterative design processes.
Prior research has shown encouraging outcomes in the rapid simulation of fluid dynamics and in
the approximation of the Navier-Stokes equations. We emphasize the use of CNNs with residual
blocks in architectural contexts within 3D domains. Additionally, we explore the application of
reverse training to forecast architectural volumes. While rapid forward prediction offers considerable
potential for improving sustainable design, the process of using CFD analysis results to directly
influence design relies on the designer’s creativity. There is no straightforward way to inform design
choices other than choosing the most effective design among many proposals. We address this by
using the same CNN model but trained in the opposite direction.
2 Data Creation and Simulation
Using a visual programming language and standard Computer-Aided Design (CAD) software, several
geometries representing urban structure samples were produced. These samples were designed to
replicate common variations in building heights within a city. The widths and depths were also
confined to typical minimum and maximum dimensions. Each sample is represented as a 3D mesh
and has to fit inside a space measuring 256m x 128m x 64m. These meshes are then voxelized with a
1-meter resolution. Our dataset comprised 3500 samples in total: 3325 (95
.
In design, analysis and optimization of aerodynamic systems, flow fields are simulated through the
use of CFD solvers. However, CFD simulation usually involves intensive computations, requiring
considerable memory and time for each iterative step. These limitations of CFD restrict the potential
for design exploration and interactive design processes. Our data set was generated by employing
OpenFOAM software. To facilitate CNN training, the entire process was automated due to the large
number of cases required.
3 Neural Network Architecture
Our network architecture follows a U-net structure. It includes eight encoder layers and seven decoder
layers. Each layer integrates a residual block that contains a 3D convolution with stride 2 and 4x4x4
filters, along with a 3D convolution with stride 1 and 3x3x3 filters. According to our tests, these
gated blocks improved our results. This was observed when compared to a basic encoder-decoder
architecture. We utilized concatenated exponential linear units for activation purposes. This fully
connected CNN has excellent generalization properties for geometries beyond those in the training
set. It also works well for input data larger than the dimensions of the training samples. This network
can approximate wind velocity fields three orders of magnitude faster than a CFD solver in a 3D
domain. The test mean squared error loss showed continuous improvement across 1000 epochs for
both forward and reverse directions. This demonstrates the generalizability of the approach. In the
reverse direction, we adjusted the number of output channels to 1. This represents whether a location
is occupied by a building (1) or outside space (0). In contrast, the forward direction has 3 output
channels, which represent the x, y, and z components of wind direction vectors.
4 Results
We implemented a Flask server that allows for interactive prediction using the visual programming
interface of the common CAD software Rhino. This CAD software offers visualization capabilities
that were utilized to generate sample images. We present a sample of forward CFD prediction.
This visualizes the wind velocity magnitude (calculated using the Frobenius norm of the x, y, and
z components). In addition, we present a reverse prediction of building volumes. Yellow indicates
undesirably high wind speed, while blue represents low, preferable wind speed.
5 Discussion
Rapid analysis responses are essential in the early conceptual design stages across multiple industries.
The demonstrated effectiveness of near real-time prediction indicates that the proposed methodology
has promising potential applications beyond architecture. The reverse approach directs designers to
focus on the desired outcome, specifically human well-being. This facilitates more efficient use of
time in sustainable design processes. Future research aims to improve the cost function by adding
continuity equation error and implementing a generative adversarial network. We are also exploring
possibilities for generating multiple building predictions from a single wind flow input.
Supplementary Materials
A Case Study
We present a designer’s workflow utilizing our forward and reverse networks. The aim is to design
and optimize urban layouts to achieve desired wind flows. This hypothetical site has a bounding box
width and depth of 256 meters, with a maximum height of 64 meters. This area is twice the size of
our training dataset, showing the benefit of using a CNN.
Our neural network is built with TensorFlow 2.0 and its Keras module. Communication between
CAD software and TensorFlow is enabled through HTTP requests which are managed by a Flask
server. Currently, the pre-processing of geometry is the bottleneck, as it needs to be voxelized. This
can be improved in the future by using external mesh libraries.
2
A.1 Initial Sketch of Volumes
Initial sketches of urban layouts can be developed in CAD software, providing a visual representation
of the desired design and also producing an initial CFD analysis. This initial sketch step can be
skipped, allowing a designer to directly create a point cloud of slow-wind areas (as shown in step
A.3).
A.2 Initial Interactive CFD Analysis
Our forward-trained network can produce spatial CFD analysis predictions within seconds. This
prediction is visualized in our CAD software.
A.3 Thresholded and Modified CFD Analysis
The CFD is filtered to focus only on areas with lower wind speeds. These locations are better suited
for outdoor activities. A point cloud visualizes these locations, and this point cloud can be modified
with geometry transformations to achieve desired wind effects.
A.4 Geometry Prediction
Our reverse-trained network can predict urban volumes that will produce the required wind flow and
can be exported as mesh objects.
A.5 Final CFD Analysis
The predicted volumes can be used to complete a CFD prediction of the wind flow.
A.6 Discussion
Future research will focus on the inclusion of interior spaces. Passive cooling is a major factor
in minimizing energy use in these spaces. The input for the reverse direction would be improved
if pedestrian comfort, for instance, was used. Our current method only accounts for wind in one
direction. This works in places where a dominant wind direction exists. Areas with variable wind
directions would require accounting for multiple directions. The forward network is capable of
predicting these multiple wind directions and can be combined.
3