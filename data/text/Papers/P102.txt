A Large-Scale Car Dataset for Fine-Grained
Categorization and Verification
Abstract
This paper aims to highlight vision related tasks centered around “car”, which has
been largely neglected by vision community in comparison to other objects. We
show that there are still many interesting car-related problems and applications,
which are not yet well explored and researched. To facilitate future car-related
research, in this paper we present our on-going effort in collecting a large-scale
dataset, “CompCars”, that covers not only different car views, but also their dif-
ferent internal and external parts, and rich attributes. Importantly, the dataset is
constructed with a cross-modality nature, containing a surveillance- nature set and
a web-nature set. We further demonstrate a few important applications exploiting
the dataset, namely car model classification, car model verification, and attribute
prediction. We also discuss specific challenges of the car-related problems and
other potential applications that worth further investigations.
** Update: This technical report serves as an extension to our earlier work published
in CVPR 2015. The experiments shown in Sec. 5 gain better performance on
all three tasks, i.e. car model classification, attribute prediction, and car model
verification, thanks to more training data and better network structures. The
experimental results can serve as baselines in any later research works. The settings
and the train/test splits are provided on the project page.
** Update 2: This update provides preliminary experiment results for fine-grained
classification on the surveillance data of CompCars. The train/test splits are
provided in the updated dataset. See details in Section 6.
1 Introduction
Cars represent a revolution in mobility and convenience, bringing us the flexibility of moving from
place to place. The societal benefits (and cost) are far-reaching. Cars are now indispensable from our
modern life as a vehicle for transportation. In many places, the car is also viewed as a tool to help
project someone’s economic status, or reflects our economic stratification. In addition, the car has
evolved into a subject of interest amongst many car enthusiasts in the world. In general, the demand
on car has shifted over the years to cover not only practicality and reliability, but also high comfort
and design. The enormous number of car designs and car model makes car a rich object class, which
can potentially foster more sophisticated and robust computer vision models and algorithms.
Cars present several unique properties that other objects cannot offer, which provides more challenges
and facilitates a range of novel research topics in object categorization. Specifically, cars own large
quantity of models that most other categories do not have, enabling a more challenging fine-grained
task. In addition, cars yield large appearance differences in their unconstrained poses, which demands
viewpoint-aware analyses and algorithms (see Fig. 1(b)). Importantly, a unique hierarchy is presented
for the car category, which is three levels from top to bottom: make, model, and released year.
This structure indicates a direction to address the fine-grained task in a hierarchical way, which is
only discussed by limited literature. Apart from the categorization task, cars reveal a number of
interesting computer vision problems. Firstly, different designing styles are applied by different
car manufacturers and in different years, which opens the door to fine-grained style analysis and
.
fine-grained part recognition (see Fig. 1(c)). Secondly, the car is an attractive topic for attribute
prediction. In particular, cars have distinctive attributes such as car class, seating capacity, number
of axles, maximum speed and displacement, which can be inferred from the appearance of the cars
(see Fig. 1(a)). Lastly, in comparison to human face verification, car verification, which targets at
verifying whether two cars belong to the same model, is an interesting and under- researched problem.
The unconstrained viewpoints make car verification arguably more challenging than traditional face
verification.
Automated car model analysis, particularly the fine- grained car categorization and verification, can be
used for innumerable purposes in intelligent transportation sys- tem including regulation, description
and indexing. For instance, fine-grained car categorization can be exploited to inexpensively automate
and expedite paying tolls from the lanes, based on different rates for different types of vehicles.
In video surveillance applications, car verification from appearance helps tracking a car over a
multiple camera network when car plate recognition fails. In post-event in- vestigation, similar
cars can be retrieved from the database with car verification algorithms. Car model analysis also
bears significant value in the personal car consumption. When people are planning to buy cars, they
tend to observe cars in the street. Think of a mobile application, which can instantly show a user
the detailed information of a car once a car photo is taken. Such an application will provide great
convenience when people want to know the information of an unrecognized car. Other applications
such as predicting popularity based on the appearance of a car, and recommending cars with similar
styles can be beneficial both for manufacturers and consumers.
Despite the huge research and practical interests, car model analysis only attracts few attentions
in the computer vision community. We believe the lack of high quality datasets greatly limits the
exploration of the community in this domain. To this end, we collect and organize a large-scale
and comprehensive image database called “Comprehensive Cars”, with “CompCars” being short.
The “CompCars” dataset is much larger in scale and diversity compared with the current car image
datasets, containing 208, 826 images of 1, 716 car models from two scenarios: web-nature and
surveillance-nature. In addition, the dataset is carefully labelled with viewpoints and car parts, as well
as rich attributes such as type of car, seat capacity, and door number. The new dataset dataset thus
provides a comprehensive platform to validate the effectiveness of a wide range of computer vision
algorithms. It is also ready to be utilized for realistic applications and enormous novel research topics.
Moreover, the multi-scenario nature en- ables the use of the dataset for cross modality research. The
detailed description of CompCars is provided in Section 3.
To validate the usefulness of the dataset and to encourage the community to explore for more novel
research topics, we demonstrate several interesting applications with the dataset, including car model
classification and verification based on convolutional neural network (CNN). An- other interesting
task is to predict attributes from novel car models (see details in Section 4.2). The experiments reveal
several challenges specific to the car-related problems. We conclude our analyses with a discussion
in Section 7.
2 Related Work
Most previous car model research focuses on car model classification. propose an evolutionary
computing framework to fit a wireframe model to the car on an image. Then the wireframe model is
employed for car model recognition. construct 3D space curves using 2D training images, then match
the 3D curves to 2D image curves using a 3D view-based alignment technique. The car model is
finally determined with the alignment result. optimize 3D model fitting and fine-grained classification
jointly. All these works are restricted to a small number of car models. Recently, propose to extract
3D car representation for classifying 196 car models. The experiment is the largest scale that we
are aware of. Car model classification is a fine-grained categorization task. In contrast to general
object classification, fine-grained categorization targets at recognizing the subcategories in one object
class. Fol- lowing this line of research, many studies have proposed different datasets on a variety
of categories: birds, dogs, cars, flowers, etc. But all these datasets are limited by their scales and
subcategory numbers.
To our knowledge, there is no previous attempt on the car model verification task. Closely related to
car model verification, face verification has been a popular topic. The recent deep learning based
algorithms first train a deep neural network on human identity clas- sification, then train a verification
2
model with the feature extracted from the deep neural network. Joint Bayesian is a widely-used
verification model that models two faces jointly with an appropriate prior on the face representation.
We adopt Joint Bayesian as a baseline model in car model verification.
Attribute prediction of humans is a popular research topic in recent years. However, a large portion
of the labeled attributes in the current attribute datasets, such as long hair and short pants lack strict
criteria, which causes annotation ambiguities. The attributes with ambiguities will potentially harm
the effectiveness of evaluation on related datasets. In contrast, the attributes provided by CompCars
(e.g. maximum speed, door number, seat capacity) all have strict criteria since they are set by the car
manufacturers. The dataset is thus advantageous over the current datasets in terms of the attributes
validity.
Other car-related research includes detection, track- ing, joint detection and pose estimation, and 3D
parsing. Fine-grained car models are not explored in these studies. Previous research related to car
parts includes car logo recognition and car style analysis based on mid-level features.
Similar to CompCars, the Cars dataset also targets at fine-grained tasks on the car category. Apart
from the larger-scale database, our CompCars dataset offers several significant benefits in comparison
to the Cars dataset. First, our dataset contains car images diversely distributed in all viewpoints
(annotated by front, rear, side, front-side, and rear-side), while Cars dataset mostly consists of front-
side car images. Second, our dataset contains aligned car part images, which can be utilized for many
computer vision algorithms that demand precise alignment. Third, our dataset provides rich attribute
annotations for each car model, which are absent in the Cars dataset.
3 Properties of CompCars
The CompCars dataset contains data from two scenarios, including images from web-nature and
surveillance-nature. The images of the web-nature are collected from car forums, public websites,
and search engines. The images of the surveillance-nature are collected by surveillance cameras. The
data of these two scenarios are widely used in the real-world applications. They open the door for
cross-modality analysis of cars. In particular, the web-nature data contains 163 car makes with 1, 716
car models, covering most of the commercial car models in the recent ten years. There are a total of
136, 727 images capturing the entire cars and 27, 618 images capturing the car parts, where most
of them are labeled with attributes and viewpoints. The surveillance-nature data contains 44, 481
car images captured in the front view. Each image in the surveillance-nature partition is annotated
with bounding box, model, and color of the car. Fig. 2 illustrates some examples of surveillance
images, which are affected by large variations from lightings and haze. Note that the data from the
surveillance-nature are significantly different from the web-nature data in Fig. 1, suggesting the great
challenges in cross-scenario car analysis. Overall, CompCars dataset offers four unique features in
comparison to existing car image databases, namely car hierarchy, car attributes, viewpoints, and car
parts. the
Car Hierarchy The car models can be organized into a large tree structure, consisting of three layers
, namely car make, car model, and year of manufacture, top to bottom as depicted in Fig. 3. The
complexity is further compounded by the fact that each car model can be produced in different years,
yielding subtle difference in their appearances. For instance, three versions of “Audi A4L” were
produced between 2009 to 2011 respectively. from
Car Attributes Each car model is labeled with five at- tributes, including maximum speed, displace-
ment, number of doors, number of seats, and type of car. These attributes provide rich information
while learning the relations or similarities between different car models. For example, we define
twelve types of cars, which are MPV , SUV , hatchback, sedan, minibus, fastback, estate, pickup, sports,
crossover, convertible, and hardtop convertible, as shown in Fig. 4. Furthermore, these attributes
can be partitioned into two groups: explicit and implicit attributes. The former group contains door
number, seat number, and car type, which are represented by discrete values, while the latter group
contains maximum speed and displacement (volume of an engine’s cylinders), represented by contin-
uous values. Humans can easily tell the numbers of doors and seats from a car’s proper viewpoint,
but hardly recognize its maximum speed and displacement. We conduct interesting experiments to
predict these attributes in Section 4.2.
3
Viewpoints We also label five viewpoints for each car model, including front (F), rear (R), side (S),
front-side (FS), and rear-side (RS). These viewpoints are labeled by several professional annotators.
The quantity distribution of the labeled car images is shown in Table 1. Note that the numbers of
viewpoint images are not balanced among different car models, because the images of some less
popular car models are difficult to collect.
Car Parts We collect images capturing the eight car parts for each car model, including four exterior
parts (i.e. headlight, taillight, fog light, and air intake) and four interior parts (i.e. console, steering
wheel, dashboard, and gear lever). These images are roughly aligned for the convenience of further
analysis. A summary and some examples are given in Table 2 and Fig. 5 respectively.
Table 1: Quantity distribution of the labeled car images in different viewpoints.
Viewpoint No. in total No. per model
F 18431 10.9
R 13513 8.0
S 23551 14.0
FS 49301 29.2
RS 31150 18.5
Table 2: Quantity distribution of the labeled car part images.
Part No. in total No. per model
headlight 3705 2.2
taillight 3563 2.1
fog light 3177 1.9
air intake 3407 2.0
console 3350 2.0
steering wheel 3503 2.1
dashboard 3478 2.1
gear lever 3435 2.0
4 Applications
In this section, we study three applications using CompCars, including fine-grained car classification,
attribute prediction, and car verification. We select 78, 126 images from the CompCars dataset and
divide them into three subsets without overlaps. The first subset (Part-I) contains 431 car models with
a total of 30, 955 images capturing the entire car and 20, 349 images capturing car parts. The second
subset (Part-II) consists 111 models with 4, 454 images in total. The last subset (Part-III) contains 1,
145 car models with 22, 236 images. Fine-grained car classification is conducted using images in the
first subset. For attribute prediction, the models are trained on the first subset but tested on the second
one. The last subset is utilized for car verification.
We investigate the above potential applications using Convolutional Neural Network (CNN), which
achieves great empirical successes in many computer vision prob- lems, such as object classification,
detection, face alignment, and face verification. Specifically, we employ the Overfeat model, which
is pretrained on ImageNet classification task, and fine-tuned with the car images for car classification
and attribute prediction. For car model verification, the fine-tuned model is employed as a feature
extractor.
4.1 Fine-Grained Classification
We classify the car images into 431 car models. For each car model, the car images produced in
different years are considered as a single category. One may treat them as different categories, leading
to a more challenging problem because their differences are relatively small. Our experiments have
two settings, comprising fine-grained classification with the entire car images and the car parts. For
both settings, we divide the data into half for training and another half for testing. Car model labels
are regarded as training target and logistic loss is used to fine-tune the Overfeat model.
4
4.1.1 The Entire Car Images
We compare the recognition performances of the CNN models, which are fine-tuned with car images
in specific viewpoints and all the viewpoints respectively, denoted as “front (F)”, “rear (R)”, “side
(S)”, “front-side (FS)”, “rear- side (RS)”, and “All-View”. The performances of these six models are
summarized in Table 3, where “FS” and “RS” achieve better performances than the performances
of the other viewpoint models. Surprisingly, the “All- View” model yields the best performance,
although it did not leverage the information of viewpoints. This result reveals that the CNN model is
capable of learning discriminative representation across different views. To verify this observation,
we visualize the car images that trigger high responses with respect to each neuron in the last fully-
connected layer. As shown in Fig. 6, these neurons capture car images of specific car models across
different viewpoints.
Several challenging cases are given in Fig. 7, where the images on the left hand side are the testing
images and the images on the right hand side are the examples of the wrong predictions (of the
“All-View” model). We found that most of the wrong predictions belong to the same car makes as the
test images. We report the “top- 1” accuracies of car make classification in the last row of Table 3,
where the “All-View” model obtain reasonable good result, indicating that a coarse-to-fine (i.e. from
car make to model) classification is possible for fine-grained car recognition.
To observe the learned feature space of the “All-View” model, we project the features extracted
from the last fully- connected layer to a two-dimensional embedding space using multi-dimensional
scaling. Fig. 8 visualizes the projected features of twelve car models, where the images are chosen
from different viewpoints. We observe that features from different models are separable in the 2D
space and features of similar models are closer than those of dissimilar models. For instance, the
distances between “BWM 5 Series” and “BWM 7 Series” are smaller than those between “BWM 5
Series” and “Chevrolet Captiva”.
We also conduct a cross-modality experiment, where the CNN model fine-tuned by the web-nature
data is evaluated on the surveillance-nature data. Fig. 9 illustrates some predictions, suggesting that
the model may account for data variations in a different modality to a certain extent. This experiment
indicates that the features obtained from the web-nature data have potential to be transferred to data
in the other scenario.
Table 3: Fine-grained classification results for the models trained on car images. Top-1 and Top-5
denote the top-1 and top-5 accuracy for car model classification, respectively. Make denotes the make
level classification accuracy.
Viewpoint F R S FS RS All-View
Top-1 0.524 0.431 0.428 0.563 0.598 0.767
Top-5 0.748 0.647 0.602 0.769 0.777 0.917
Make 0.710 0.521 0.507 0.680 0.656 0.829
4.1.2 Car Parts
Car enthusiasts are able to distinguish car models by examining the car parts. We investigate if
the CNN model can mimic this strength. We train a CNN model using images from each of the
eight car parts. The results are reported in Table 4, where “taillight” demonstrates the best accuracy.
We visualize taillight images that have high responses with respect to each neuron in the last fully-
connected layer. Fig. 10 displays such images with respect to two neurons. “Taillight” wins among
the different car parts, mostly likely due to the relatively more distinctive designs, and the model
name printed close to the taillight, which is a very informative feature for the CNN model.
We also combine predictions using the eight car part models by voting strategy. This strategy
significantly improves the performance due to the complementary nature of different car parts.
4.2 Attribute Prediction
Human can easily identify the car attributes such as numbers of doors and seats from a proper
viewpoint, without knowing the car model. For example, a car image captured in the side view
5
Table 4: Fine-grained classification results for the models trained on car parts. Top-1 and Top-5
denote the top-1 and top-5 accuracy for car model classification, respectively.
Exterior parts Interior parts
Headlight Taillight Fog light Air intake Console Steering wheel Dashboard Gear lever V oting
Top-1 0.479 0.684 0.387 0.484 0.535 0.540 0.502 0.355 0.808
Top-5 0.690 0.859 0.566 0.695 0.745 0.773 0.736 0.589 0.927
provides sufficient information of the door number and car type, but it is hard to infer these attributes
from the frontal view. The appearance of a car also provides hints on the implicit attributes, such
as the maximum speed and the displacement. For instance, a car model is probably designed for
high-speed driving, if it has a low under-pan and a streamline body.
In this section, we deliberately design a challenging experimental setting for attribute recognition,
where the car models presented in the test images are exclusive from the training images. We fine-tune
the CNN with the sum- of-square loss to model the continuous attributes, such as “maximum speed”
and “displacement”, but a logistic loss to predict the discrete attributes such as “door number”, “seat
number”, and “car type”. For example, the “door number” has four states, i.e. 2, 3, 4, 5 doors, while
“seat number” also has four states, i.e. 2, 4, 5, > 5 seats. The attribute “car type” has twelve states as
discussed in Sec. 3.
To study the effectiveness of different viewpoints for attribute prediction, we train CNN models for
different viewpoints separately. Table 5 summarizes the results, where the “mean guess” represents
the errors computed by using the mean of the training set as the prediction. We observe that the
performances of “maximum speed” and “displacement” are insensitive to viewpoints. However, for
the explicit attributes, the best accuracy is obtained under side view. We also found that the the
implicit attributes are more difficult to predict then the explicit attributes. Several test images and
their attribute predictions are provided in Fig. 11.
Table 5: Attribute prediction results for the five single viewpoint models. For the continuous attributes
(maximum speed and displacement), we display the mean difference from the ground truth. For the
discrete attributes (door and seat number, car type), we display the classification accuracy. Mean
guess denotes the mean error with a prediction of the mean value on the training set.
Viewpoint F R S FS RS
mean difference
Maximum speed 20.8 21.3 20.4 20.1 21.3
(mean guess) 38.0 38.5 39.4 40.2 40.1
Displacement 0.811 0.752 0.795 0.875 0.822
(mean guess) 1.04 0.922 1.04 1.13 1.08
classification accuracy
Door number 0.674 0.748 0.837 0.738 0.788
Seat number 0.672 0.691 0.711 0.660 0.700
Car type 0.541 0.585 0.627 0.571 0.612
4.3 Car Verification
In this section, we perform car verification following the pipeline of face verification. In particular,
we adopt the classification model in Section 4.1.1 as a feature extractor of the car images, and then
apply Joint Bayesian to train a verification model on the Part-II data. Finally, we test the performance
of the model on the Part-III data, which includes 1, 145 car models. The test data is organized into
three sets, each of which has different difficulty, i.e. easy, medium, and hard. Each set contains 20,
000 pairs of images, including 10, 000 positive pairs and 10, 000 negative pairs. Each image pair in
the “easy set” is selected from the same viewpoint, while each pair in the “medium set” is selected
from a pair of random viewpoints. Each negative pair in the “hard set” is chosen from the same car
make.
6
Deeply learned feature combined with Joint Bayesian has been proven successful for face verification.
Joint Bayesian formulates the feature x as the sum of two independent Gaussian variables
x=p+e, (1)
where p∼ N(0,Σp)represents identity information, and e∼ N(0,Σe)the intra-category variations.
Joint Bayesian models the joint probability of two objects given the intra or extra-category varia-
tion hypothesis, P(x1, x2|HI)andP(x1, x2|HE). These two probabilities are also Gaussian with
variations
ΣI= Σp+ Σe,ΣE= Σp+ Σe (2)
and
ΣI= Σp+ Σe,ΣE= Σe (3)
respectively. ΣpandΣecan be learned from data with EM algorithm. In the testing stage, it calculates
the likelihood ratio
r(x1, x2) = logP(x1, x2|HI)
P(x1, x2|HE), (4)
which has closed-form solution. The feature extracted from the CNN model has a dimension of 4,
096, which is reduced to 20 by PCA. The compressed features are then utilized to train the Joint
Bayesian model. During the testing stage, each image pair is classified by comparing the likelihood
ratio produced by Joint Bayesian with a threshold. This model is denoted as (CNN feature + Joint
Bayesian).
The second method combines the CNN features and SVM, denoted as CNN feature + SVM. Here,
SVM is a binary classifier using a pair of image features as input. The label ‘1’ represents positive
pair, while ‘0’ represents negative pair. We extract 100, 000 pairs of image features from Part-II data
for training.
The performances of the two models are shown in Table 6 and the ROC curves for the “hard set”
are plotted in Fig. 14. We observe that CNN feature + Joint Bayesian outperforms CNN feature
+ SVM with large margins, indicating the advantage of Joint Bayesian for this task. However, its
benefit in car verification is not as effective as in face verification, where CNN and Joint Bayesian
nearly saturated the LFW dataset and approached human performance. Fig. 12 depicts several pairs
of test images as well as their predictions by CNN feature + Joint Bayesian. We observe two major
challenges. First, for the image pair of the same model but different viewpoints, it is difficult to
obtain the correspondences directly from the raw image pixels. Second, the appearances of different
car models of the same car make are extremely similar. It is difficult to distinguish these car models
using the entire images. Part localization or detection is crucial for car verification.
Table 6: The verification accuracy of three baseline models.
Easy Medium Hard
CNN feature + Joint Bayesian 0.833 0.824 0.761
CNN feature + SVM 0.700 0.690 0.659
random guess 0.500
5 Updated Results: Comparing Different Deep Models
As an extension to the experiments in Section 4, we conduct experiments for fine-grained car
classification, at- tribute prediction, and car verification with the entire dataset and different deep
models, in order to explore the different capabilities of the models on these tasks. The split of the
dataset into the three tasks is similar to Section 4, where three subsets contain 431, 111, and 1, 145
car models, with 52, 083, 11, 129, and 72, 962 images respectively. The only difference is that we
adopt full set of CompCars in order to establish updated baseline experiments and to make use of the
dataset to the largest extent. We keep the testing sets of car verification same to those in Section 4.3.
We evaluate three network structures, namely AlexNet, Overfeat, and GoogLeNet for all three tasks.
All networks are pre-trained on the ImageNet classification task, and fine-tuned with the same
mini-batch size, epochs, and learning rates for each task. All predictions of the deep models are
produced with a single center crop of the image. We use Caffe as the platform for our experiments.
7
The experimental results can serve as baselines in any later research works. The train/test splits can
be downloaded from CompCars webpage.
5.1 Fine-Grained Classification
In this section, we classify the car images into 431 car models as in Section 4.1.1. We divide the data
into 70
Table 7: The classification accuracies of three deep models.
Model AlexNet Overfeat GoogLeNet
Top-1 0.819 0.879 0.912
Top-5 0.940 0.969 0.981
Table 8: Attribute prediction results of three deep models. For the continuous attributes (maximum
speed and displacement), we display the mean difference from the ground truth (lower is better). For
the discrete attributes (door and seat number, car type), we display the classification accuracy (higher
is better).
Model AlexNet Overfeat GoogLeNet
mean difference
Maximum speed 21.3 19.4 19.4
(mean guess) 36.9
Displacement 0.803 0.770 0.760
(mean guess) 1.02
classification accuracy
Door number 0.750 0.780 0.796
Seat number 0.691 0.713 0.717
Car type 0.602 0.631 0.643
5.2 Attribute Prediction
We predict attributes from 111 models not existed in the training set. Different from Section 4.2
where models are trained with cars in single viewpoints, we train with images in all viewpoints to
build a compact model. Table 8 summarizes the results for the three networks, where “mean guess”
represents the prediction with the mean of the values on the training set. GoogLeNet performs the
best for all attributes and Overfeat is a close running-up.
5.3 Car Verification
The evaluation pipeline follows Section 4.3. We evaluate the three deep models combined with two
verification models: Joint Bayesian and SVM with polynomial kernel. The feature extracted from the
CNN models is reduced to 200 by PCA before training and testing in all experiments.
The performances of the three networks combined with the two verification models are shown in
Table 9, where each model is denoted by name of the deep model + name of the verification model.
GoogLeNet + Joint Bayesian achieves the best performance in all three settings. For each deep model,
Joint Bayesian outperforms SVM consistently. Compared to Table 6, Overfeat + Joint Bayesian
yields a performance gain of 2 4
8